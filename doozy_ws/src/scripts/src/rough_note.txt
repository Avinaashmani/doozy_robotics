#!/usr/bin/env python3

import rospy
import tf2_ros
import geometry_msgs.msg

def publish_tf():
    rospy.init_node('tf_publisher')
    tf_buffer = tf2_ros.Buffer()
    tf_listener = tf2_ros.TransformListener(tf_buffer)
    tf_broadcaster = tf2_ros.TransformBroadcaster()

    rate = rospy.Rate(10)  # 10 Hz
    while not rospy.is_shutdown():
        try:
            # Define the transform
            transform = geometry_msgs.msg.TransformStamped()
            transform.header.stamp = rospy.Time.now()
            transform.header.frame_id = "map"  # Parent frame
            transform.child_frame_id = "test_tf"  # Child frame
            transform.transform.translation.x = 1.0  # Translation in x
            transform.transform.translation.y = 0.0  # Translation in y
            transform.transform.translation.z = 0.0  # Translation in z
            transform.transform.rotation.x = 0.0  # Quaternion x
            transform.transform.rotation.y = 0.0  # Quaternion y
            transform.transform.rotation.z = 0.0  # Quaternion z
            transform.transform.rotation.w = 1.0  # Quaternion w

            # Broadcast the transform
            tf_broadcaster.sendTransform(transform)

        except (rospy.ROSInterruptException, tf2_ros.LookupException, tf2_ros.ConnectivityException, tf2_ros.ExtrapolationException):
            pass

        rate.sleep()

if __name__ == '__main__':
    try:
        publish_tf()
    except rospy.ROSInterruptException:
        pass
